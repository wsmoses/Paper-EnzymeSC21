@misc{kochkov2021machine,
      title={Machine learning accelerated computational fluid dynamics}, 
      author={Dmitrii Kochkov and Jamie A. Smith and Ayya Alieva and Qing Wang and Michael P. Brenner and Stephan Hoyer},
      year={2021},
      eprint={2102.01010},
      archivePrefix={arXiv},
      primaryClass={physics.flu-dyn}
}

@inproceedings{autophase,
  title={Autophase: Compiler phase-ordering for hls with deep reinforcement learning},
  author={Huang, Qijing and Haj-Ali, Ameer and Moses, William and Xiang, John and Stoica, Ion and Asanovic, Krste and Wawrzynek, John},
  booktitle={2019 IEEE 27th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM)},
  pages={308--308},
  year={2019},
  organization={IEEE}
}

@incollection{enzymeNeurips,
    title = {Instead of Rewriting Foreign Code for Machine Learning, Automatically Synthesize Fast Gradients},
    author = {Moses, William S. and Churavy, Valentin},
    booktitle = {Advances in Neural Information Processing Systems},
    year = {2020},
    volume = {33},
    pages = {12472--12485},
}

@inproceedings{lattner2008llvm,
  title={LLVM and Clang: Next generation compiler technology},
  author={Lattner, Chris},
  booktitle={The BSD conference},
  volume={5},
  year={2008}
}


@article{rhodin2010ptx,
  title={A {PTX} code generator for {LLVM}},
  author={Rhodin, Helge},
  journal={Oct},
  volume={29},
  pages={1--63},
  year={2010}
}
@inproceedings{holewinski2011ptx,
  title={{PTX} back-end: {GPU} programming with {LLVM}},
  author={Holewinski, Justin},
  booktitle={The Ohio State University. LLVM Developer’s Meeting. November},
  volume={18},
  year={2011}
}

@article{bezanson2017julia,
  title={Julia: A fresh approach to numerical computing},
  author={Bezanson, Jeff and Edelman, Alan and Karpinski, Stefan and Shah, Viral B},
  journal={SIAM review},
  volume={59},
  number={1},
  pages={65--98},
  year={2017},
  publisher={SIAM}
}

@book{AhoLaSe06,
	Author = {Alfred V. Aho and Monica S. Lam and Ravi Sethi and Jeffrey D. Ullman},
	Edition = {Second},
	Publisher = {Addison-Wesley},
	Title = {Compilers: Principles, Techniques, and Tools},
	Year = {2006}}
	
@book{Muchnick97,
	Author = {Steven S. Muchnick},
	Opt_Bibsource = {dblp computer science bibliography, http://dblp.org},
	Opt_Biburl = {http://dblp.uni-trier.de/rec/bib/books/mk/Muchnick1997},
	Opt_Isbn = {1-55860-320-4},
	Opt_Timestamp = {Mon, 05 Jan 2004 14:58:03 +0100},
	Publisher = {Morgan Kaufmann},
	Title = {Advanced Compiler Design and Implementation},
	Year = {1997}}
	
@article{romano2013openmc,
  title={The {OpenMC Monte Carlo} particle transport code},
  author={Romano, Paul K and Forget, Benoit},
  journal={Annals of Nuclear Energy},
  volume={51},
  pages={274--281},
  year={2013},
  publisher={Elsevier}
}

@inproceedings{RSBench,
author="Tramm, John R. and Siegel, Andrew R. and Forget, Benoit and Josey, Colin",
title="Performance Analysis of a Reduced Data Movement Algorithm for Neutron Cross Section Data in {Monte Carlo} Simulations",
booktitle = {{EASC} 2014 - Solving Software Challenges for Exascale},
address = {Stockholm},
year = "2014",
url = "https://doi.org/10.1007/978-3-319-15976-8_3"
}

@inproceedings{LLVM,
  title={{LLVM}: A compilation framework for lifelong program analysis \& transformation},
  author={Lattner, Chris and Adve, Vikram},
  booktitle={International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages={75--86},
  year={2004},
  organization={IEEE}
}

@InProceedings{paszke2017automatic,
  title={Automatic differentiation in {PyTorch}},
  author={Paszke, Adam and Gross, Sam and Chintala, Soumith and Chanan, Gregory and Yang, Edward and DeVito, Zachary and Lin, Zeming and Desmaison, Alban and Antiga, Luca and Lerer, Adam},
  year={2017},
   booktitle = {NIPS 2017 Workshop Autodiff},
}

@inproceedings{abadi2016tensorflow,
  title={{TensorFlow}: A system for large-scale machine learning},
  author={Abadi, Mart{\'\i}n and Barham, Paul and Chen, Jianmin and Chen, Zhifeng and Davis, Andy and Dean, Jeffrey and Devin, Matthieu and Ghemawat, Sanjay and Irving, Geoffrey and Isard, Michael and others},
  booktitle={12th USENIX Symposium on Operating Systems Design and Implementation (OSDI 16)},
  pages={265--283},
  year={2016}
}

@inproceedings{XSBench,
author = {Tramm, John R and Siegel, Andrew R and Islam, Tanzima and Schulz, Martin},
title = {{XSBench} -- The Development and Verification of a Performance Abstraction for {M}onte {C}arlo Reactor Analysis},
booktitle = {{PHYSOR} 2014 - The Role of Reactor Physics toward a Sustainable Future},
address = {Kyoto},
year = 2014,
url = "https://www.mcs.anl.gov/papers/P5064-0114.pdf"
}

@ARTICLE{
           Utke2008OAM,
        author = "Jean Utke and Uwe Naumann and Mike Fagan and Nathan Tallent and Michelle Strout and
           Patrick Heimbach and Chris Hill and Carl Wunsch",
        title = "Open{AD/F}: A Modular, Open-Source Tool for Automatic Differentiation of {Fortran}
           Codes",
        journal = "{ACM} Transactions on Mathematical Software",
        volume = "34",
        number = "4",
        pages = "18:1--18:36",
        year = "2008",
        doi = "10.1145/1377596.1377598",
        ad_tools = "OpenAD",
}

@article{NARAYANAN20101845,
title = {{ADIC2}: Development of a component source transformation system for differentiating {C and C++}},
journal = {Procedia Computer Science},
volume = {1},
number = {1},
pages = {1845-1853},
year = {2010},
note = {ICCS 2010},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2010.04.206},
url = {https://www.sciencedirect.com/science/article/pii/S1877050910002073},
author = {Sri Hari Krishna Narayanan and Boyana Norris and Beata Winnicka},
keywords = {Automatic differentiation, Source transformation, ADIC2},
abstract = {We present a new tool, ADIC2, for automatic differentiation (AD) of C and C++ code through source-to-source transformation. ADIC2 is the successor of the ADIC differentiation tool, which supports forward mode AD of C and a small subset of C++. ADIC2 was completely redesigned and reimplemented as part of the OpenAD software framework, resulting in a robust, flexible, and extensible tool for differentiating C and some features of C++, with plans for full support of C++ in the near future. We discuss some of the challenges in creating AD tools for C and C++ in general and describe the component approach employed in the design and implementation of ADIC2.}
}

@article{GIERING20051345,
title = {Generating efficient derivative code with {TAF}: Adjoint and tangent linear {Euler} flow around an airfoil},
journal = {Future Generation Computer Systems},
volume = {21},
number = {8},
pages = {1345-1355},
year = {2005},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2004.11.003},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X04001785},
author = {R. Giering and T. Kaminski and T. Slawig},
keywords = {Computational fluid dynamics, Adjoint, Hessian, Automatic differentiation, Navier–Stokes, Shape optimisation},
}

@article{bischof1996adifor,
  title={{ADIFOR} 2.0: Automatic differentiation of {F}ortran 77 programs},
  author={Bischof, Christian and Khademi, Peyvand and Mauer, Andrew and Carle, Alan},
  journal={IEEE Computational Science and Engineering},
  volume={3},
  number={3},
  pages={18--32},
  year={1996},
  publisher={IEEE}
}

@article{bischof1992adifor,
  title={{ADIFOR}--generating derivative codes from {Fortran} programs},
  author={Bischof, Christian and Carle, Alan and Corliss, George and Griewank, Andreas and Hovland, Paul},
  journal={Scientific Programming},
  volume={1},
  number={1},
  pages={11--29},
  year={1992},
  publisher={IOS Press}
}

@article{TapenadeRef13,
  author = {Hasco{\"e}t, L. and Pascual, V.},
  title = {The {T}apenade {A}utomatic {D}ifferentiation tool: {P}rinciples, {M}odel, and {S}pecification},
  journal = "{ACM} {T}ransactions {O}n {M}athematical {S}oftware",
  volume = 39,
  number = 3,
  URL = "http://dx.doi.org/10.1145/2450153.2450158",
  year=2013
}

@article{bischof1997adic,
  title={{ADIC}: an extensible automatic differentiation tool for {ANSI-C}},
  author={Bischof, Christian H and Roh, Lucas and Mauer-Oats, Andrew J},
  journal={Software: Practice and Experience},
  volume={27},
  number={12},
  pages={1427--1456},
  year={1997},
  publisher={Wiley Online Library}
}

@article{TOWARA201519,
title = {{MPI} -- Parallel Discrete Adjoint {OpenFOAM}},
journal = {Procedia Computer Science},
volume = {51},
pages = {19-28},
year = {2015},
note = {International Conference On Computational Science, ICCS 2015},
issn = {1877-0509},
doi = {https://doi.org/10.1016/j.procs.2015.05.181},
url = {https://www.sciencedirect.com/science/article/pii/S1877050915009898},
author = {Markus Towara and Michel Schanen and Uwe Naumann},
}

@INPROCEEDINGS{5161165,
  author={J. {Utke} and L. {Hasco{\"e}t} and P. {Heimbach} and C. {Hill} and P. {Hovland} and U. {Naumann}},
  booktitle={2009 IEEE International Symposium on Parallel   Distributed Processing}, 
  title={Toward adjoinable {MPI}}, 
  year={2009},
  volume={},
  number={},
  pages={1--8},
  doi={10.1109/IPDPS.2009.5161165}}


@article{CARDESA2020101155,
title = {Adjoint computations by algorithmic differentiation of a parallel solver for time-dependent {PDEs}},
journal = {Journal of Computational Science},
volume = {45},
pages = {101155},
year = {2020},
issn = {1877-7503},
doi = {https://doi.org/10.1016/j.jocs.2020.101155},
url = {https://www.sciencedirect.com/science/article/pii/S1877750320304567},
author = {J.I. {Cardesa} and L. {Hasco{\"e}t} and C. {Airiau}},
}

@article{doi:10.1177/1094342017712060,
author = {Jan H{\"u}ckelheim and Paul Hovland and Michelle Mills Strout and Jens-Dominik M{\"u}ller},
title ={Reverse-mode algorithmic differentiation of an {OpenMP}-parallel compressible flow solver},
journal = {The International Journal of High Performance Computing Applications},
volume = {33},
number = {1},
pages = {140--154},
year = {2019},
doi = {10.1177/1094342017712060},

URL = { 
        https://doi.org/10.1177/1094342017712060
    
},
eprint = { 
        https://doi.org/10.1177/1094342017712060
    
}
}

@article{tfmad,
	Author = {J.C. H{\"u}ckelheim and P.D. Hovland and M.M. Strout and J.-D. M{\"u}ller},
	Date-Added = {2019-03-09 00:34:06 +0000},
	Date-Modified = {2019-03-09 00:34:17 +0000},
	Doi = {10.1080/10556788.2018.1435654},
	Eprint = {https://doi.org/10.1080/10556788.2018.1435654},
	Journal = {Optimization Methods and Software},
	Number = {4-6},
	Pages = {672-693},
	Publisher = {Taylor & Francis},
	Title = {Parallelizable adjoint stencil computations using transposed forward-mode algorithmic differentiation},
	Url = {https://doi.org/10.1080/10556788.2018.1435654},
	Volume = {33},
	Year = {2018},
	Bdsk-Url-1 = {https://doi.org/10.1080/10556788.2018.1435654}}

@techreport{LULESH2:changes,
author = {Ian Karlin and Jeff Keasler and Rob Neely},
title = {{LULESH 2.0 Updates and Changes},number = {LLNL-TR-641973}},
location = {Livermore, CA},
pages = {1-9},
year = {2013},
month = {August}
}

@article{stratton2012parboil,
  title={Parboil: A revised benchmark suite for scientific and commercial throughput computing},
  author={Stratton, John A and Rodrigues, Christopher and Sung, I-Jui and Obeid, Nady and Chang, Li-Wen and Anssari, Nasser and Liu, Geng Daniel and Hwu, Wen-mei W},
  journal={Center for Reliable and High-Performance Computing},
  volume={127},
  year={2012}
}

@article{gremse2016gpu,
  title={{GPU}-accelerated adjoint algorithmic differentiation},
  author={Gremse, Felix and H{\"o}fter, Andreas and Razik, Lukas and Kiessling, Fabian and Naumann, Uwe},
  journal={Computer physics communications},
  volume={200},
  pages={300--311},
  year={2016},
  publisher={Elsevier}
}

@INCOLLECTION{
         Grabner2008ADf,
       author = "Markus Grabner and Thomas Pock and Tobias Gross and Bernhard Kainz",
       title = "Automatic Differentiation for {GPU}-Accelerated {2D/3D} Registration",
       doi = "10.1007/978-3-540-68942-3_23",
       pages = "259--269",
       abstract = "A common task in medical image analysis is the alignment of data from different
         sources, e.g., X-ray images and computed tomography (CT) data. Such a task is generally known as
         registration. We demonstrate the applicability of automatic differentiation (AD) techniques to a
         class of 2D/3D registration problems which are highly computationally intensive and can therefore
         greatly benefit from a parallel implementation on recent graphics processing units (GPUs). However,
         being designed for graphics applications, GPUs have some restrictions which conflict with
         requirements for reverse mode AD, in particular for taping and TBR analysis. We discuss design and
         implementation issues in the presence of such restrictions on the target platform and present a
         method which can register a CT volume data set (512 × 512 × 288 voxels) with three X-ray
         images (512 × 512 pixels each) in 20 seconds on a GeForce 8800GTX graphics card.",
       booktitle = "Advances in Automatic Differentiation",
       publisher = "Springer",
       editor = "Christian H. Bischof and H. Martin B{\"u}cker and Paul D. Hovland and Uwe
         Naumann and J. Utke",
       isbn = "978-3-540-68935-5",
       issn = "1439-7358",
       year = "2008",
       ad_area = "Biomedicine"
}


@misc{blhdorn2020automat,
   title={{AutoMat} — Automatic Differentiation for Generalized Standard Materials on {GPUs}},
   author={Johannes Bl{\"u}hdorn and Nicolas R. Gauger and Matthias Kabel},
   year={2020},
   eprint={2006.04391},
   archivePrefix={arXiv},
   primaryClass={cs.CE}
}

@inproceedings{halide,
author = {Ragan-Kelley, Jonathan and Barnes, Connelly and Adams, Andrew and Paris, Sylvain and Durand, Frédo and Amarasinghe, Saman},
year = {2013},
month = {06},
pages = {519-530},
title = {Halide: A Language and Compiler for Optimizing Parallelism, Locality, and Recomputation in Image Processing Pipelines},
volume = {48},
journal = {ACM SIGPLAN Notices},
doi = {10.1145/2499370.2462176}
}

@misc{tensorflow2015-whitepaper,
title={ {TensorFlow}: Large-Scale Machine Learning on Heterogeneous Systems},
url={https://www.tensorflow.org/},
note={Software available from tensorflow.org},
author={
    Mart\'{\i}n~Abadi and
    Ashish~Agarwal and
    Paul~Barham and
    Eugene~Brevdo and
    Zhifeng~Chen and
    Craig~Citro and
    Greg~S.~Corrado and
    Andy~Davis and
    Jeffrey~Dean and
    Matthieu~Devin and
    Sanjay~Ghemawat and
    Ian~Goodfellow and
    Andrew~Harp and
    Geoffrey~Irving and
    Michael~Isard and
    Yangqing Jia and
    Rafal~Jozefowicz and
    Lukasz~Kaiser and
    Manjunath~Kudlur and
    Josh~Levenberg and
    Dandelion~Man\'{e} and
    Rajat~Monga and
    Sherry~Moore and
    Derek~Murray and
    Chris~Olah and
    Mike~Schuster and
    Jonathon~Shlens and
    Benoit~Steiner and
    Ilya~Sutskever and
    Kunal~Talwar and
    Paul~Tucker and
    Vincent~Vanhoucke and
    Vijay~Vasudevan and
    Fernanda~Vi\'{e}gas and
    Oriol~Vinyals and
    Pete~Warden and
    Martin~Wattenberg and
    Martin~Wicke and
    Yuan~Yu and
    Xiaoqiang~Zheng},
  year={2015},
}

@article{bradbury2020jax,
  title={{JAX}: composable transformations of {Python}+{NumPy} programs, 2018},
  author={Bradbury, James and Frostig, Roy and Hawkins, Peter and Johnson, Matthew James and Leary, Chris and Maclaurin, Dougal and Wanderman-Milne, Skye},
  journal={URL http://github. com/google/jax},
  volume={4},
  pages={16},
  year={2020}
}

@article{revels2018-mixedmode,
  author    = {Jarrett Revels and
               Tim Besard and
               Valentin Churavy and
               Bjorn De Sutter and
               Juan Pablo Vielma},
  title     = {Dynamic Automatic Differentiation of {GPU} Broadcast Kernels},
  journal   = {CoRR},
  volume    = {abs/1810.08297},
  year      = {2018},
  url       = {http://arxiv.org/abs/1810.08297},
  archivePrefix = {arXiv},
  eprint    = {1810.08297},
  timestamp = {Wed, 31 Oct 2018 14:24:29 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1810-08297.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@INCOLLECTION{
         Walther2012Gsw,
       title = "Getting started with {ADOL-C}",
       author = "A. Walther and A. Griewank",
       editor = "U. Naumann and O. Schenk",
       publisher = "Chapman-Hall CRC Computational Science",
       year = "2012",
       booktitle = "Combinatorial Scientific Computing",
       pages = "181--202",
       chapter = "7",
       ad_tools = "ADOL-C"
}

@book{griewank2008evaluating,
  title={Evaluating derivatives: principles and techniques of algorithmic differentiation},
  author={Griewank, Andreas and Walther, Andrea},
  year={2008},
  publisher={SIAM}
}

@book{naumann2011art,
  title={The art of differentiating computer programs: an introduction to algorithmic differentiation},
  author={Naumann, Uwe},
  year={2011},
  publisher={SIAM}
}

@article{TapenadeOpenMP,
	author = {H{\"u}ckelheim, Jan Christian and Hasco{\"e}t, Laurent},
	journal = {In Review},
	title = {Source-to-Source Automatic Differentiation of {OpenMP} Parallel Loops},
	year = {2021},
	}
	
@incollection{Bischof2008PRM,
       title = "Parallel Reverse Mode Automatic Differentiation for {OpenMP} Programs with {ADOL-C}",
       doi = "10.1007/978-3-540-68942-3_15",
       author = "Christian Bischof and Niels Guertler and Andreas Kowarz and Andrea Walther",
       pages = "163--173",
       booktitle = "Advances in Automatic Differentiation",
       publisher = "Springer",
       editor = "Christian H. Bischof and H. Martin B{\"u}cker and Paul D. Hovland and Uwe
         Naumann and J. Utke",
       isbn = "978-3-540-68935-5",
       issn = "1439-7358",
       year = "2008"
}

@incollection{Giering2005TLa,
       author = "Ralf Giering and Thomas Kaminski and Ricardo Todling and Ronald Errico and Ronald
         Gelaro and Nathan Winslow",
       title = "Tangent Linear and Adjoint Versions of {NASA/GMAO's} {F}ortran~90 Global Weather
         Forecast Model",
       pages = "275--284",
       booktitle = "Automatic Differentiation: {A}pplications, Theory, and Implementations",
       year = "2005",
       editor = "H. Martin B{\"u}cker and George F. Corliss and Paul D. Hovland and Uwe
         Naumann and Boyana Norris",
       publisher = "Springer"
}

@inproceedings{hu2020difftaichi,
  title={{DiffTaichi}: Differentiable Programming for Physical Simulation},
  author={Hu, Yuanming and Anderson, Luke and Li, Tzu-Mao and Sun, Qi and Carr, Nathan and Ragan-Kelley, Jonathan and Durand, Fr{\'e}do},
  booktitle={International Conference on Learning Representations},
  year={2020}
}

@article{schoenholz2020jax,
  title={{JAX md:} a framework for differentiable physics},
  author={Schoenholz, Samuel and Cubuk, Ekin Dogus},
  journal={Advances in Neural Information Processing Systems},
  volume={33},
  year={2020}
}

@article{de2018end,
  title={End-to-end differentiable physics for learning and control},
  author={de Avila Belbute-Peres, Filipe and Smith, Kevin and Allen, Kelsey and Tenenbaum, Josh and Kolter, J Zico},
  journal={Advances in neural information processing systems},
  volume={31},
  pages={7178--7189},
  year={2018}
}

@article{besard2018juliagpu,
  author        = {Besard, Tim and Foket, Christophe and De Sutter, Bjorn},
  title         = {Effective Extensible Programming: Unleashing {Julia} on {GPUs}},
  journal       = {IEEE Transactions on Parallel and Distributed Systems},
  year          = {2018},
  doi           = {10.1109/TPDS.2018.2872064},
  ISSN          = {1045-9219},
  archivePrefix = {arXiv},
  eprint        = {1712.03112},
  primaryClass  = {cs.PL},
}

@article{clima2017,
author = {Schneider, Tapio and Lan, Shiwei and Stuart, Andrew and Teixeira, João},
title = {{Earth System Modeling 2.0}: A Blueprint for Models That Learn From Observations and Targeted High-Resolution Simulations},
journal = {Geophysical Research Letters},
volume = {44},
number = {24},
pages = {12,396-12,417},
keywords = {Earth system models, parameterizations, data assimilation, machine learning, Kalman inversion, Markov chain Monte Carlo},
doi = {https://doi.org/10.1002/2017GL076101},
url = {https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1002/2017GL076101},
eprint = {https://agupubs.onlinelibrary.wiley.com/doi/pdf/10.1002/2017GL076101},
year = {2017}
}

@misc{AMDGPU2021,
  author       = {Julian Samaroo and
                  Valentin Churavy and
                  Wiktor Phillips and
                  Jason Barmparesos and
                  Julia TagBot and
                  Takafumi Arakaki and
                  Stephan Antholzer and
                  Alessandro and
                  chriselrod and
                  Tim Besard},
  title        = {JuliaGPU/AMDGPU.jl: v0.2.6 for Zenodo},
  month        = apr,
  year         = 2021,
  publisher    = {Zenodo},
  version      = {v0.2.6-zenodo},
  doi          = {10.5281/zenodo.4677701},
  url          = {https://doi.org/10.5281/zenodo.4677701}
}

@article{dg_wilcox,
author = {Daniel S Abdi and Lucas C Wilcox and Timothy C Warburton and Francis X Giraldo},
title ={{A GPU-accelerated continuous and discontinuous Galerkin non-hydrostatic atmospheric model}},
journal = {The International Journal of High Performance Computing Applications},
number = {1},
pages = {81-109},
year = {2019},
doi = {10.1177/1094342017694427},

URL = { 
        https://doi.org/10.1177/1094342017694427
    
},
eprint = { 
        https://doi.org/10.1177/1094342017694427
    
}
}

@article{griewank1996algorithm,
  title={Algorithm 755: {ADOL-C}: A package for the automatic differentiation of algorithms written in {C/C++}},
  author={Griewank, Andreas and Juedes, David and Utke, Jean},
  journal={ACM Transactions on Mathematical Software (TOMS)},
  volume={22},
  number={2},
  pages={131--167},
  year={1996},
  publisher={ACM New York, NY, USA}
}

@article{hogan2014fast,
  title={Fast reverse-mode automatic differentiation using expression templates in {C}++},
  author={Hogan, Robin J},
  journal={ACM Transactions on Mathematical Software (TOMS)},
  volume={40},
  number={4},
  pages={1--16},
  year={2014},
  publisher={ACM New York, NY, USA}
}


@article{sagebaum2019high,
  title={High-performance derivative computations using codipack},
  author={Sagebaum, Max and Albring, Tim and Gauger, Nicolas R},
  journal={ACM Transactions on Mathematical Software (TOMS)},
  volume={45},
  number={4},
  pages={1--26},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@article{bell2012cppad,
  title={{CppAD: a package for C++ algorithmic differentiation}},
  author={Bell, Bradley M},
  journal={Computational Infrastructure for Operations Research},
  volume={57},
  number={10},
  year={2012}
}

@article{lotz2011dco,
  title={dco/c++-derivative code by overloading in {C++}},
  author={Lotz, Johannes and Leppkes, Klaus and Naumann, Uwe},
  journal={Aachener Informatik Berichte (AIB-2011-06)},
  year={2011}
}

@phdthesis{forster2014algorithmic,
	Author = {F{\"o}rster, Michael},
	Date-Added = {2015-12-22 22:35:34 +0000},
	Date-Modified = {2016-05-04 11:02:34 +0000},
	Publisher = {Springer},
	School = {RWTH Aachen},
	Title = {Algorithmic Differentiation of Pragma-Defined Parallel Regions: Differentiating Computer Programs Containing {OpenMP}},
	Year = {2014},
}


@INPROCEEDINGS{
         Bucker2001BTA,
       title = "Bringing Together Automatic Differentiation and {OpenMP}",
       booktitle = "Proceedings of the 15th ACM International Conference on Supercomputing, Sorrento,
         Italy, June~17--21, 2001",
       publisher = "ACM Press",
       pages = "246--251",
       address = "New York",
       mynote = "Also available as SC preprint RWTH--CS--SC--01--04",
       mywwwtype = "proceedings",
       abstract = "Derivatives of almost arbitrary functions can be evaluated efficiently by automatic
         differentiation whenever the functions are given in the form of computer programs in a high-level
         programming language such as Fortran, C, or C++. Furthermore, in contrast to numerical
         differentiation where derivatives are approximated, automatic differentiation generates derivatives
         that are accurate up to machine precision. The so-called forward mode of automatic differentiation
         computes derivatives by carrying forward a gradient associated with each intermediate variable
         simultaneously with the evaluation of the function itself. It is shown how software tools
         implementing the technology of automatic differentiation can benefit from simple concepts of shared
         memory programming to parallelize the gradient operations. The feasibility of our approach is
         demonstrated by numerical experiments. They were performed with a code that was generated
         automatically by the Adifor system and augmented with OpenMP directives.",
       ad_tools = "ADIFOR",
       ad_theotech = "Parallelism",
       year = "2001",
       url = "http://doi.acm.org/10.1145/377792.377842",
       doi = "10.1145/377792.377842",
       author = "H. Martin B{\"u}cker and Bruno Lang and an Mey, Dieter and Christian
         H.~Bischof"
}

@INPROCEEDINGS{
         Bucker2002ELS,
       author = "H. M. B{\"u}cker and B. Lang and A. Rasch and C. H. Bischof and D.~an~Mey",
       title = "Explicit Loop Scheduling in {OpenMP} for Parallel Automatic Differentiation",
       booktitle = "Proceedings of the 16th Annual International Symposium on High Performance
         Computing Systems and Applications, Moncton, NB, Canada, June~16--19, 2002",
       editor = "J. N. Almhana and V. C. Bhavsar",
       pages = "121--126",
       address = "Los Alamitos, CA",
       publisher = "IEEE Computer Society Press",
       doi = "10.1109/HPCSA.2002.1019144",
       url = "http://doi.ieeecomputersociety.org/10.1109/HPCSA.2002.1019144",
       abstract = "Derivatives of almost arbitrary functions can be evaluated efficiently by automatic
         differentiation whenever the functions are given in the form of computer programs in a high-level
         programming language such as Fortran, C, or C++. In contrast to numerical differentiation, where
         derivatives are only approximated, automatic differentiation generates derivatives that are accurate
         up to machine precision. Sophisticated software tools implementing the technology of automatic
         differentiation are capable of automatically generating code for the product of the Jacobian matrix
         and a so-called seed matrix. It is shown how these tools can benefit from concepts of shared memory
         programming to parallelize, in a completely mechanical fashion, the gradient operations associated
         with each statement of the given code. The feasibility of our approach is demonstrated by numerical
         experiments. They were performed with a code that was generated automatically by the Adifor system
         and augmented with OpenMP directives.",
       year = "2002",
       ad_theotech = "Parallelism"
}

@book{ghanem2017handbook,
  title={Handbook of uncertainty quantification},
  author={Ghanem, Roger and Higdon, David and Owhadi, Houman},
  volume={6},
  year={2017},
  publisher={Springer}
}

@inproceedings{maclaurin2015gradient,
  title={Gradient-based hyperparameter optimization through reversible learning},
  author={Maclaurin, Dougal and Duvenaud, David and Adams, Ryan},
  booktitle={International conference on machine learning},
  pages={2113--2122},
  year={2015},
  organization={PMLR}
}

@article{duchi2011adaptive,
  title={Adaptive subgradient methods for online learning and stochastic optimization.},
  author={Duchi, John and Hazan, Elad and Singer, Yoram},
  journal={Journal of machine learning research},
  volume={12},
  number={7},
  year={2011}
}

@inproceedings{gpucc,
author = {Wu, Jingyue and Belevich, Artem and Bendersky, Eli and Heffernan, Mark and Leary, Chris and Pienaar, Jacques and Roune, Bjarke and Springer, Rob and Weng, Xuetian and Hundt, Robert},
title = {Gpucc: An Open-Source {GPGPU} Compiler},
year = {2016},
isbn = {9781450337786},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2854038.2854041},
doi = {10.1145/2854038.2854041},
abstract = { Graphics Processing Units have emerged as powerful accelerators for massively parallel, numerically intensive workloads. The two dominant software models for these devices are NVIDIA’s CUDA and the cross-platform OpenCL standard. Until now, there has not been a fully open-source compiler targeting the CUDA environment, hampering general compiler and architecture research and making deployment difficult in datacenter or supercomputer environments. In this paper, we present gpucc, an LLVM-based, fully open-source, CUDA compatible compiler for high performance computing. It performs various general and CUDA-specific optimizations to generate high performance code. The Clang-based frontend supports modern language features such as those in C++11 and C++14. Compile time is 8% faster than NVIDIA’s toolchain (nvcc) and it reduces compile time by up to 2.4x for pathological compilations (>100 secs), which tend to dominate build times in parallel build environments. Compared to nvcc, gpucc’s runtime performance is on par for several open-source benchmarks, such as Rodinia (0.8% faster), SHOC (0.5% slower), or Tensor (3.7% faster). It outperforms nvcc on internal large-scale end-to-end benchmarks by up to 51.0%, with a geometric mean of 22.9%. },
booktitle = {Proceedings of the 2016 International Symposium on Code Generation and Optimization},
pages = {105–116},
numpages = {12},
keywords = {optimization, compiler, GPU},
location = {Barcelona, Spain},
series = {CGO '16}
}

  

@article{griewank2000algorithm,
  title={Algorithm 799: revolve: an implementation of checkpointing for the reverse or adjoint mode of computational differentiation},
  author={Griewank, Andreas and Walther, Andrea},
  journal={ACM Transactions on Mathematical Software (TOMS)},
  volume={26},
  number={1},
  pages={19--45},
  year={2000},
  publisher={ACM New York, NY, USA}
}

@article{wang2009minimal,
  title={Minimal repetition dynamic checkpointing algorithm for unsteady adjoint calculation},
  author={Wang, Qiqi and Moin, Parviz and Iaccarino, Gianluca},
  journal={SIAM Journal on Scientific Computing},
  volume={31},
  number={4},
  pages={2549--2567},
  year={2009},
  publisher={SIAM}
}

@article{aupy2016optimal,
  title={Optimal multistage algorithm for adjoint computation},
  author={Aupy, Guillaume and Herrmann, Julien and Hovland, Paul and Robert, Yves},
  journal={SIAM Journal on Scientific Computing},
  volume={38},
  number={3},
  pages={C232--C255},
  year={2016},
  publisher={SIAM}
}